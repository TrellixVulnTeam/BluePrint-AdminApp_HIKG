{"ast":null,"code":"import _toConsumableArray from \"/Users/nitinpradhan/Documents/Project/architectui-angular-theme-free/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/nitinpradhan/Documents/Project/architectui-angular-theme-free/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nitinpradhan/Documents/Project/architectui-angular-theme-free/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Injectable, ɵɵdefineInjectable, EventEmitter, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { cloneDeep } from 'lodash-es';\nimport { pluginService, Chart as Chart$1 } from 'chart.js';\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/default-colors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nvar defaultColors = [[255, 99, 132], [54, 162, 235], [255, 206, 86], [231, 233, 237], [75, 192, 192], [151, 187, 205], [220, 220, 220], [247, 70, 74], [70, 191, 189], [253, 180, 92], [148, 159, 177], [77, 83, 96]];\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/get-colors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generate colors by chart type\n * @param {?} chartType\n * @param {?} index\n * @param {?} count\n * @return {?}\n */\n\nfunction getColors(chartType, index, count) {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n\n  if (chartType === 'bubble') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'scatter') {\n    return formatPieColors(generateColors(count));\n  }\n\n  throw new Error('getColors - Unsupported chart type: ' + chartType);\n}\n/**\n * @param {?} colour\n * @param {?} alpha\n * @return {?}\n */\n\n\nfunction rgba(colour, alpha) {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n/**\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\n\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n * @param {?} colors\n * @return {?}\n */\n\n\nfunction formatLineColor(colors) {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\n\n\nfunction formatBarColor(colors) {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\n\n\nfunction formatPieColors(colors) {\n  return {\n    backgroundColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 0.6);\n    }),\n    borderColor: colors.map(\n    /**\n    * @return {?}\n    */\n    function () {\n      return '#fff';\n    }),\n    pointBackgroundColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 1);\n    }),\n    pointBorderColor: colors.map(\n    /**\n    * @return {?}\n    */\n    function () {\n      return '#fff';\n    }),\n    pointHoverBackgroundColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 1);\n    }),\n    pointHoverBorderColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 1);\n    })\n  };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\n\n\nfunction formatPolarAreaColors(colors) {\n  return {\n    backgroundColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 0.6);\n    }),\n    borderColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 1);\n    }),\n    hoverBackgroundColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 0.8);\n    }),\n    hoverBorderColor: colors.map(\n    /**\n    * @param {?} color\n    * @return {?}\n    */\n    function (color) {\n      return rgba(color, 1);\n    })\n  };\n}\n/**\n * @return {?}\n */\n\n\nfunction getRandomColor() {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param {?} index\n * @return {?}\n */\n\n\nfunction generateColor(index) {\n  return defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param {?} count\n * @return {?}\n */\n\n\nfunction generateColors(count) {\n  /** @type {?} */\n  var colorsArr = new Array(count);\n\n  for (var i = 0; i < count; i++) {\n    colorsArr[i] = defaultColors[i] || getRandomColor();\n  }\n\n  return colorsArr;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/theme.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ThemeService = /*#__PURE__*/function () {\n  function ThemeService() {\n    _classCallCheck(this, ThemeService);\n\n    this.pColorschemesOptions = {};\n    this.colorschemesOptions = new BehaviorSubject({});\n  }\n  /**\n   * @param {?} options\n   * @return {?}\n   */\n\n\n  _createClass(ThemeService, [{\n    key: \"setColorschemesOptions\",\n    value: function setColorschemesOptions(options) {\n      this.pColorschemesOptions = options;\n      this.colorschemesOptions.next(options);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getColorschemesOptions\",\n    value: function getColorschemesOptions() {\n      return this.pColorschemesOptions;\n    }\n  }]);\n\n  return ThemeService;\n}();\n\nThemeService.ɵfac = function ThemeService_Factory(t) {\n  return new (t || ThemeService)();\n};\n/** @nocollapse */\n\n\nThemeService.ctorParameters = function () {\n  return [];\n};\n/** @nocollapse */\n\n\nThemeService.ɵprov = ɵɵdefineInjectable({\n  factory: function ThemeService_Factory() {\n    return new ThemeService();\n  },\n  token: ThemeService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ThemeService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  ThemeService.prototype.pColorschemesOptions;\n  /** @type {?} */\n\n  ThemeService.prototype.colorschemesOptions;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/base-chart.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction OldState() {}\n\nif (false) {\n  /** @type {?} */\n  OldState.prototype.dataExists;\n  /** @type {?} */\n\n  OldState.prototype.dataLength;\n  /** @type {?} */\n\n  OldState.prototype.datasetsExists;\n  /** @type {?} */\n\n  OldState.prototype.datasetsLength;\n  /** @type {?} */\n\n  OldState.prototype.datasetsDataObjects;\n  /** @type {?} */\n\n  OldState.prototype.datasetsDataLengths;\n  /** @type {?} */\n\n  OldState.prototype.colorsExists;\n  /** @type {?} */\n\n  OldState.prototype.colors;\n  /** @type {?} */\n\n  OldState.prototype.labelsExist;\n  /** @type {?} */\n\n  OldState.prototype.labels;\n  /** @type {?} */\n\n  OldState.prototype.legendExists;\n  /** @type {?} */\n\n  OldState.prototype.legend;\n}\n/** @enum {number} */\n\n\nvar UpdateType = {\n  Default: 0,\n  Update: 1,\n  Refresh: 2\n};\nUpdateType[UpdateType.Default] = 'Default';\nUpdateType[UpdateType.Update] = 'Update';\nUpdateType[UpdateType.Refresh] = 'Refresh';\n\nvar BaseChartDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} element\n   * @param {?} themeService\n   */\n  function BaseChartDirective(element, themeService) {\n    _classCallCheck(this, BaseChartDirective);\n\n    this.element = element;\n    this.themeService = themeService;\n    this.options = {};\n    this.chartClick = new EventEmitter();\n    this.chartHover = new EventEmitter();\n    this.old = {\n      dataExists: false,\n      dataLength: 0,\n      datasetsExists: false,\n      datasetsLength: 0,\n      datasetsDataObjects: [],\n      datasetsDataLengths: [],\n      colorsExists: false,\n      colors: [],\n      labelsExist: false,\n      labels: [],\n      legendExists: false,\n      legend: {}\n    };\n    this.subs = [];\n  }\n  /**\n   * Register a plugin.\n   * @param {?} plugin\n   * @return {?}\n   */\n\n\n  _createClass(BaseChartDirective, [{\n    key: \"ngOnInit\",\n    value:\n    /**\n     * @return {?}\n     */\n    function ngOnInit() {\n      var _this = this;\n\n      this.ctx = this.element.nativeElement.getContext('2d');\n      this.refresh();\n      this.subs.push(this.themeService.colorschemesOptions.subscribe(\n      /**\n      * @param {?} r\n      * @return {?}\n      */\n      function (r) {\n        return _this.themeChanged(r);\n      }));\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n\n  }, {\n    key: \"themeChanged\",\n    value: function themeChanged(options) {\n      this.refresh();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      var _this2 = this;\n\n      if (!this.chart) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var updateRequired = UpdateType.Default;\n      /** @type {?} */\n\n      var wantUpdate =\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      function wantUpdate(x) {\n        updateRequired = x > updateRequired ? x : updateRequired;\n      };\n\n      if (!!this.data !== this.old.dataExists) {\n        this.propagateDataToDatasets(this.data);\n        this.old.dataExists = !!this.data;\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (this.data && this.data.length !== this.old.dataLength) {\n        this.old.dataLength = this.data && this.data.length || 0;\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (!!this.datasets !== this.old.datasetsExists) {\n        this.old.datasetsExists = !!this.datasets;\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\n        this.old.datasetsLength = this.datasets && this.datasets.length || 0;\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (this.datasets && this.datasets.filter(\n      /**\n      * @param {?} x\n      * @param {?} i\n      * @return {?}\n      */\n      function (x, i) {\n        return x.data !== _this2.old.datasetsDataObjects[i];\n      }).length) {\n        this.old.datasetsDataObjects = this.datasets.map(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return x.data;\n        });\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (this.datasets && this.datasets.filter(\n      /**\n      * @param {?} x\n      * @param {?} i\n      * @return {?}\n      */\n      function (x, i) {\n        return x.data.length !== _this2.old.datasetsDataLengths[i];\n      }).length) {\n        this.old.datasetsDataLengths = this.datasets.map(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return x.data.length;\n        });\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (!!this.colors !== this.old.colorsExists) {\n        this.old.colorsExists = !!this.colors;\n        this.updateColors();\n        wantUpdate(UpdateType.Update);\n      } // This smells of inefficiency, might need to revisit this\n\n\n      if (this.colors && this.colors.filter(\n      /**\n      * @param {?} x\n      * @param {?} i\n      * @return {?}\n      */\n      function (x, i) {\n        return !_this2.colorsEqual(x, _this2.old.colors[i]);\n      }).length) {\n        this.old.colors = this.colors.map(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return _this2.copyColor(x);\n        });\n        this.updateColors();\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (!!this.labels !== this.old.labelsExist) {\n        this.old.labelsExist = !!this.labels;\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (this.labels && this.labels.filter(\n      /**\n      * @param {?} x\n      * @param {?} i\n      * @return {?}\n      */\n      function (x, i) {\n        return !_this2.labelsEqual(x, _this2.old.labels[i]);\n      }).length) {\n        this.old.labels = this.labels.map(\n        /**\n        * @param {?} x\n        * @return {?}\n        */\n        function (x) {\n          return _this2.copyLabel(x);\n        });\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (!!this.options.legend !== this.old.legendExists) {\n        this.old.legendExists = !!this.options.legend;\n        wantUpdate(UpdateType.Refresh);\n      }\n\n      if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\n        this.old.legend.position = this.options.legend.position;\n        wantUpdate(UpdateType.Refresh);\n      }\n\n      switch (\n      /** @type {?} */\n      updateRequired) {\n        case UpdateType.Default:\n          break;\n\n        case UpdateType.Update:\n          this.update();\n          break;\n\n        case UpdateType.Refresh:\n          this.refresh();\n          break;\n      }\n    }\n    /**\n     * @param {?} a\n     * @return {?}\n     */\n\n  }, {\n    key: \"copyLabel\",\n    value: function copyLabel(a) {\n      if (Array.isArray(a)) {\n        return _toConsumableArray(a);\n      }\n\n      return a;\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n\n  }, {\n    key: \"labelsEqual\",\n    value: function labelsEqual(a, b) {\n      return Array.isArray(a) === Array.isArray(b) && (Array.isArray(a) || a === b) && (!Array.isArray(a) || a.length === b.length) && (!Array.isArray(a) || a.filter(\n      /**\n      * @param {?} x\n      * @param {?} i\n      * @return {?}\n      */\n      function (x, i) {\n        return x !== b[i];\n      }).length === 0);\n    }\n    /**\n     * @param {?} a\n     * @return {?}\n     */\n\n  }, {\n    key: \"copyColor\",\n    value: function copyColor(a) {\n      return {\n        backgroundColor: a.backgroundColor,\n        borderWidth: a.borderWidth,\n        borderColor: a.borderColor,\n        borderCapStyle: a.borderCapStyle,\n        borderDash: a.borderDash,\n        borderDashOffset: a.borderDashOffset,\n        borderJoinStyle: a.borderJoinStyle,\n        pointBorderColor: a.pointBorderColor,\n        pointBackgroundColor: a.pointBackgroundColor,\n        pointBorderWidth: a.pointBorderWidth,\n        pointRadius: a.pointRadius,\n        pointHoverRadius: a.pointHoverRadius,\n        pointHitRadius: a.pointHitRadius,\n        pointHoverBackgroundColor: a.pointHoverBackgroundColor,\n        pointHoverBorderColor: a.pointHoverBorderColor,\n        pointHoverBorderWidth: a.pointHoverBorderWidth,\n        pointStyle: a.pointStyle,\n        hoverBackgroundColor: a.hoverBackgroundColor,\n        hoverBorderColor: a.hoverBorderColor,\n        hoverBorderWidth: a.hoverBorderWidth\n      };\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n\n  }, {\n    key: \"colorsEqual\",\n    value: function colorsEqual(a, b) {\n      if (!a !== !b) {\n        return false;\n      }\n\n      return !a || a.backgroundColor === b.backgroundColor && a.borderWidth === b.borderWidth && a.borderColor === b.borderColor && a.borderCapStyle === b.borderCapStyle && a.borderDash === b.borderDash && a.borderDashOffset === b.borderDashOffset && a.borderJoinStyle === b.borderJoinStyle && a.pointBorderColor === b.pointBorderColor && a.pointBackgroundColor === b.pointBackgroundColor && a.pointBorderWidth === b.pointBorderWidth && a.pointRadius === b.pointRadius && a.pointHoverRadius === b.pointHoverRadius && a.pointHitRadius === b.pointHitRadius && a.pointHoverBackgroundColor === b.pointHoverBackgroundColor && a.pointHoverBorderColor === b.pointHoverBorderColor && a.pointHoverBorderWidth === b.pointHoverBorderWidth && a.pointStyle === b.pointStyle && a.hoverBackgroundColor === b.hoverBackgroundColor && a.hoverBorderColor === b.hoverBorderColor && a.hoverBorderWidth === b.hoverBorderWidth;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"updateColors\",\n    value: function updateColors() {\n      var _this3 = this;\n\n      this.datasets.forEach(\n      /**\n      * @param {?} elm\n      * @param {?} index\n      * @return {?}\n      */\n      function (elm, index) {\n        if (_this3.colors && _this3.colors[index]) {\n          Object.assign(elm, _this3.colors[index]);\n        } else {\n          Object.assign(elm, getColors(_this3.chartType, index, elm.data.length), Object.assign({}, elm));\n        }\n      });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      /** @type {?} */\n      var updateRequired = UpdateType.Default;\n      /** @type {?} */\n\n      var wantUpdate =\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      function wantUpdate(x) {\n        updateRequired = x > updateRequired ? x : updateRequired;\n      }; // Check if the changes are in the data or datasets or labels or legend\n\n\n      if (changes.hasOwnProperty('data') && changes.data.currentValue) {\n        this.propagateDataToDatasets(changes.data.currentValue);\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\n        this.propagateDatasetsToData(changes.datasets.currentValue);\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (changes.hasOwnProperty('labels')) {\n        if (this.chart) {\n          this.chart.data.labels = changes.labels.currentValue;\n        }\n\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (changes.hasOwnProperty('legend')) {\n        if (this.chart) {\n          this.chart.config.options.legend.display = changes.legend.currentValue;\n          this.chart.generateLegend();\n        }\n\n        wantUpdate(UpdateType.Update);\n      }\n\n      if (changes.hasOwnProperty('options')) {\n        wantUpdate(UpdateType.Refresh);\n      }\n\n      switch (\n      /** @type {?} */\n      updateRequired) {\n        case UpdateType.Update:\n          this.update();\n          break;\n\n        case UpdateType.Refresh:\n        case UpdateType.Default:\n          this.refresh();\n          break;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = void 0;\n      }\n\n      this.subs.forEach(\n      /**\n      * @param {?} x\n      * @return {?}\n      */\n      function (x) {\n        return x.unsubscribe();\n      });\n    }\n    /**\n     * @param {?=} duration\n     * @return {?}\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(duration) {\n      if (this.chart) {\n        return this.chart.update(duration);\n      }\n    }\n    /**\n     * @param {?} index\n     * @param {?} hidden\n     * @return {?}\n     */\n\n  }, {\n    key: \"hideDataset\",\n    value: function hideDataset(index, hidden) {\n      this.chart.getDatasetMeta(index).hidden = hidden;\n      this.chart.update();\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n\n  }, {\n    key: \"isDatasetHidden\",\n    value: function isDatasetHidden(index) {\n      return this.chart.getDatasetMeta(index).hidden;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      return this.chart.toBase64Image();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getChartConfiguration\",\n    value: function getChartConfiguration() {\n      var _this4 = this;\n\n      /** @type {?} */\n      var datasets = this.getDatasets();\n      /** @type {?} */\n\n      var options = Object.assign({}, this.options);\n\n      if (this.legend === false) {\n        options.legend = {\n          display: false\n        };\n      } // hook for onHover and onClick events\n\n\n      options.hover = options.hover || {};\n\n      if (!options.hover.onHover) {\n        options.hover.onHover =\n        /**\n        * @param {?} event\n        * @param {?} active\n        * @return {?}\n        */\n        function (event, active) {\n          if (active && !active.length) {\n            return;\n          }\n\n          _this4.chartHover.emit({\n            event: event,\n            active: active\n          });\n        };\n      }\n\n      if (!options.onClick) {\n        options.onClick =\n        /**\n        * @param {?=} event\n        * @param {?=} active\n        * @return {?}\n        */\n        function (event, active) {\n          _this4.chartClick.emit({\n            event: event,\n            active: active\n          });\n        };\n      }\n      /** @type {?} */\n\n\n      var mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\n      return {\n        type: this.chartType,\n        data: {\n          labels: this.labels || [],\n          datasets: datasets\n        },\n        plugins: this.plugins,\n        options: mergedOptions\n      };\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n\n  }, {\n    key: \"getChartBuilder\",\n    value: function getChartBuilder(ctx\n    /*, data:any[], options:any*/\n    ) {\n      /** @type {?} */\n      var chartConfig = this.getChartConfiguration();\n      return new Chart$1(ctx, chartConfig);\n    }\n    /**\n     * @param {?} options\n     * @param {?} overrides\n     * @param {?=} level\n     * @return {?}\n     */\n\n  }, {\n    key: \"smartMerge\",\n    value: function smartMerge(options, overrides) {\n      var _this5 = this;\n\n      var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (level === 0) {\n        options = cloneDeep(options);\n      }\n      /** @type {?} */\n\n\n      var keysToUpdate = Object.keys(overrides);\n      keysToUpdate.forEach(\n      /**\n      * @param {?} key\n      * @return {?}\n      */\n      function (key) {\n        if (Array.isArray(overrides[key])) {\n          /** @type {?} */\n          var arrayElements = options[key];\n\n          if (arrayElements) {\n            arrayElements.forEach(\n            /**\n            * @param {?} r\n            * @return {?}\n            */\n            function (r) {\n              _this5.smartMerge(r, overrides[key][0], level + 1);\n            });\n          }\n        } else if (typeof overrides[key] === 'object') {\n          if (!(key in options)) {\n            options[key] = {};\n          }\n\n          _this5.smartMerge(options[key], overrides[key], level + 1);\n        } else {\n          options[key] = overrides[key];\n        }\n      });\n\n      if (level === 0) {\n        return options;\n      }\n    }\n    /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n\n  }, {\n    key: \"isMultiLineLabel\",\n    value: function isMultiLineLabel(label) {\n      return Array.isArray(label);\n    }\n    /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n\n  }, {\n    key: \"joinLabel\",\n    value: function joinLabel(label) {\n      if (!label) {\n        return null;\n      }\n\n      if (this.isMultiLineLabel(label)) {\n        return label.join(' ');\n      } else {\n        return label;\n      }\n    }\n    /**\n     * @private\n     * @param {?} datasets\n     * @return {?}\n     */\n\n  }, {\n    key: \"propagateDatasetsToData\",\n    value: function propagateDatasetsToData(datasets) {\n      this.data = this.datasets.map(\n      /**\n      * @param {?} r\n      * @return {?}\n      */\n      function (r) {\n        return r.data;\n      });\n\n      if (this.chart) {\n        this.chart.data.datasets = datasets;\n      }\n\n      this.updateColors();\n    }\n    /**\n     * @private\n     * @param {?} newDataValues\n     * @return {?}\n     */\n\n  }, {\n    key: \"propagateDataToDatasets\",\n    value: function propagateDataToDatasets(newDataValues) {\n      var _this6 = this;\n\n      if (this.isMultiDataSet(newDataValues)) {\n        if (this.datasets && newDataValues.length === this.datasets.length) {\n          this.datasets.forEach(\n          /**\n          * @param {?} dataset\n          * @param {?} i\n          * @return {?}\n          */\n          function (dataset, i) {\n            dataset.data = newDataValues[i];\n          });\n        } else {\n          this.datasets = newDataValues.map(\n          /**\n          * @param {?} data\n          * @param {?} index\n          * @return {?}\n          */\n          function (data, index) {\n            return {\n              data: data,\n              label: _this6.joinLabel(_this6.labels[index]) || \"Label \".concat(index)\n            };\n          });\n\n          if (this.chart) {\n            this.chart.data.datasets = this.datasets;\n          }\n        }\n      } else {\n        if (!this.datasets) {\n          this.datasets = [{\n            data: newDataValues\n          }];\n\n          if (this.chart) {\n            this.chart.data.datasets = this.datasets;\n          }\n        } else {\n          if (!this.datasets[0]) {\n            this.datasets[0] = {};\n          }\n\n          this.datasets[0].data = newDataValues;\n          this.datasets.splice(1); // Remove all elements but the first\n        }\n      }\n\n      this.updateColors();\n    }\n    /**\n     * @private\n     * @param {?} data\n     * @return {?}\n     */\n\n  }, {\n    key: \"isMultiDataSet\",\n    value: function isMultiDataSet(data) {\n      return Array.isArray(data[0]);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDatasets\",\n    value: function getDatasets() {\n      if (!this.datasets && !this.data) {\n        throw new Error(\"ng-charts configuration error, data or datasets field are required to render chart \".concat(this.chartType));\n      } // If `datasets` is defined, use it over the `data` property.\n\n\n      if (this.datasets) {\n        this.propagateDatasetsToData(this.datasets);\n        return this.datasets;\n      }\n\n      if (this.data) {\n        this.propagateDataToDatasets(this.data);\n        return this.datasets;\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      // if (this.options && this.options.responsive) {\n      //   setTimeout(() => this.refresh(), 50);\n      // }\n      // todo: remove this line, it is producing flickering\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = void 0;\n      }\n\n      if (this.ctx) {\n        this.chart = this.getChartBuilder(this.ctx\n        /*, data, this.options*/\n        );\n      }\n    }\n  }], [{\n    key: \"registerPlugin\",\n    value: function registerPlugin(plugin) {\n      pluginService.register(plugin);\n    }\n    /**\n     * @param {?} plugin\n     * @return {?}\n     */\n\n  }, {\n    key: \"unregisterPlugin\",\n    value: function unregisterPlugin(plugin) {\n      pluginService.unregister(plugin);\n    }\n  }]);\n\n  return BaseChartDirective;\n}();\n\nBaseChartDirective.ɵfac = function BaseChartDirective_Factory(t) {\n  return new (t || BaseChartDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ThemeService));\n};\n\nBaseChartDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: BaseChartDirective,\n  selectors: [[\"canvas\", \"baseChart\", \"\"]],\n  inputs: {\n    options: \"options\",\n    data: \"data\",\n    datasets: \"datasets\",\n    labels: \"labels\",\n    chartType: \"chartType\",\n    colors: \"colors\",\n    legend: \"legend\",\n    plugins: \"plugins\"\n  },\n  outputs: {\n    chartClick: \"chartClick\",\n    chartHover: \"chartHover\"\n  },\n  exportAs: [\"base-chart\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nBaseChartDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ThemeService\n  }];\n};\n\nBaseChartDirective.propDecorators = {\n  data: [{\n    type: Input\n  }],\n  datasets: [{\n    type: Input\n  }],\n  labels: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  chartType: [{\n    type: Input\n  }],\n  colors: [{\n    type: Input\n  }],\n  legend: [{\n    type: Input\n  }],\n  plugins: [{\n    type: Input\n  }],\n  chartClick: [{\n    type: Output\n  }],\n  chartHover: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseChartDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line:directive-selector\n      selector: 'canvas[baseChart]',\n      exportAs: 'base-chart'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ThemeService\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    chartClick: [{\n      type: Output\n    }],\n    chartHover: [{\n      type: Output\n    }],\n    data: [{\n      type: Input\n    }],\n    datasets: [{\n      type: Input\n    }],\n    labels: [{\n      type: Input\n    }],\n    chartType: [{\n      type: Input\n    }],\n    colors: [{\n      type: Input\n    }],\n    legend: [{\n      type: Input\n    }],\n    plugins: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  BaseChartDirective.prototype.data;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.datasets;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.labels;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.options;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.chartType;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.colors;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.legend;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.plugins;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.chartClick;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.chartHover;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.ctx;\n  /** @type {?} */\n\n  BaseChartDirective.prototype.chart;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BaseChartDirective.prototype.old;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BaseChartDirective.prototype.subs;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BaseChartDirective.prototype.element;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  BaseChartDirective.prototype.themeService;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/charts.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar ChartsModule = /*#__PURE__*/_createClass(function ChartsModule() {\n  _classCallCheck(this, ChartsModule);\n});\n\nChartsModule.ɵfac = function ChartsModule_Factory(t) {\n  return new (t || ChartsModule)();\n};\n\nChartsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ChartsModule\n});\nChartsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartsModule, {\n    declarations: [BaseChartDirective],\n    exports: [BaseChartDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChartsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [BaseChartDirective],\n      imports: [],\n      exports: [BaseChartDirective]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction Color() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  Color.prototype.backgroundColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.borderWidth;\n  /** @type {?|undefined} */\n\n  Color.prototype.borderColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.borderCapStyle;\n  /** @type {?|undefined} */\n\n  Color.prototype.borderDash;\n  /** @type {?|undefined} */\n\n  Color.prototype.borderDashOffset;\n  /** @type {?|undefined} */\n\n  Color.prototype.borderJoinStyle;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointBorderColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointBackgroundColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointBorderWidth;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointRadius;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointHoverRadius;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointHitRadius;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointHoverBackgroundColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointHoverBorderColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointHoverBorderWidth;\n  /** @type {?|undefined} */\n\n  Color.prototype.pointStyle;\n  /** @type {?|undefined} */\n\n  Color.prototype.hoverBackgroundColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.hoverBorderColor;\n  /** @type {?|undefined} */\n\n  Color.prototype.hoverBorderWidth;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/colors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction Colors() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  Colors.prototype.data;\n  /** @type {?|undefined} */\n\n  Colors.prototype.label;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/monkey-patch-chart-js-legend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n\n/**\n * @return {?}\n */\n\n\nfunction monkeyPatchChartJsLegend() {\n  if (typeof Chart === 'undefined') {\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n    return;\n  }\n  /** @type {?} */\n\n\n  var plugins = Chart.plugins.getAll();\n  /** @type {?} */\n\n  var legend = plugins.filter(\n  /**\n  * @param {?} p\n  * @return {?}\n  */\n  function (p) {\n    return p.id === 'legend';\n  })[0];\n  legend._element.prototype.fit = fit;\n  legend._element.prototype.draw = draw;\n  /** @type {?} */\n\n  var helpers = Chart.helpers;\n  /** @type {?} */\n\n  var defaults = Chart.defaults;\n  /** @type {?} */\n\n  var valueOrDefault = helpers.valueOrDefault;\n  /**\n   * @param {?} labelOpts\n   * @param {?} fontSize\n   * @return {?}\n   */\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  function fit() {\n    /** @type {?} */\n    var me = this;\n    /** @type {?} */\n\n    var opts = me.options;\n    /** @type {?} */\n\n    var labelOpts = opts.labels;\n    /** @type {?} */\n\n    var display = opts.display;\n    /** @type {?} */\n\n    var ctx = me.ctx;\n    /** @type {?} */\n\n    var labelFont = helpers.options._parseFont(labelOpts);\n    /** @type {?} */\n\n\n    var fontSize = labelFont.size; // Reset hit boxes\n\n    /** @type {?} */\n\n    var hitboxes = me.legendHitBoxes = [];\n    /** @type {?} */\n\n    var minSize = me.minSize;\n    /** @type {?} */\n\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n    /** @type {?} */\n\n\n    var getMaxLineWidth =\n    /**\n    * @param {?} textLines\n    * @return {?}\n    */\n    function getMaxLineWidth(textLines) {\n      return textLines.map(\n      /**\n      * @param {?} textLine\n      * @return {?}\n      */\n      function (textLine) {\n        return ctx.measureText(textLine).width;\n      }).reduce(\n      /**\n      * @param {?} acc\n      * @param {?} v\n      * @return {?}\n      */\n      function (acc, v) {\n        return v > acc ? v : acc;\n      }, 0);\n    }; // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont.string;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\n        /** @type {?} */\n        var lineWidths = me.lineWidths = [0];\n        /** @type {?} */\n\n        var lineHeights = me.lineHeights = [];\n        /** @type {?} */\n\n        var currentLineHeight = 0;\n        /** @type {?} */\n\n        var lineIndex = 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems,\n        /**\n        * @param {?} legendItem\n        * @param {?} i\n        * @return {?}\n        */\n        function (legendItem, i) {\n          /** @type {?} */\n          var width;\n          /** @type {?} */\n\n          var height;\n\n          if (helpers.isArray(legendItem.text)) {\n            width = getMaxLineWidth(legendItem.text);\n            height = fontSize * legendItem.text.length + labelOpts.padding;\n          } else {\n            width = ctx.measureText(legendItem.text).width;\n            height = fontSize + labelOpts.padding;\n          }\n\n          width += getBoxWidth(labelOpts, fontSize) + fontSize / 2;\n\n          if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\n            lineHeights.push(currentLineHeight);\n            currentLineHeight = 0;\n            lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n            lineIndex++;\n          }\n\n          legendItem.lineOrColumnIndex = lineIndex;\n\n          if (height > currentLineHeight) {\n            currentLineHeight = height;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: height\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        lineHeights.push(currentLineHeight);\n        minSize.height += lineHeights.reduce(\n        /**\n        * @param {?} acc\n        * @param {?} v\n        * @return {?}\n        */\n        function (acc, v) {\n          return acc + v;\n        }, 0);\n      } else {\n        /** @type {?} */\n        var vPadding = labelOpts.padding;\n        /** @type {?} */\n\n        var columnWidths = me.columnWidths = [];\n        /** @type {?} */\n\n        var columnHeights = me.columnHeights = [];\n        /** @type {?} */\n\n        var totalWidth = labelOpts.padding;\n        /** @type {?} */\n\n        var currentColWidth = 0;\n        /** @type {?} */\n\n        var currentColHeight = 0;\n        /** @type {?} */\n\n        var columnIndex = 0;\n        helpers.each(me.legendItems,\n        /**\n        * @param {?} legendItem\n        * @param {?} i\n        * @return {?}\n        */\n        function (legendItem, i) {\n          /** @type {?} */\n          var itemWidth;\n          /** @type {?} */\n\n          var height;\n\n          if (helpers.isArray(legendItem.text)) {\n            itemWidth = getMaxLineWidth(legendItem.text);\n            height = fontSize * legendItem.text.length;\n          } else {\n            itemWidth = ctx.measureText(legendItem.text).width;\n            height = fontSize;\n          }\n\n          itemWidth += getBoxWidth(labelOpts, fontSize) + fontSize / 2; // If too tall, go to new column\n\n          if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            columnHeights.push(currentColHeight);\n            currentColWidth = 0;\n            currentColHeight = 0;\n            columnIndex++;\n          }\n\n          legendItem.lineOrColumnIndex = columnIndex; // Get max width\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += height + vPadding; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: height\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        columnHeights.push(currentColHeight);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  function draw() {\n    /** @type {?} */\n    var me = this;\n    /** @type {?} */\n\n    var opts = me.options;\n    /** @type {?} */\n\n    var labelOpts = opts.labels;\n    /** @type {?} */\n\n    var globalDefaults = defaults.global;\n    /** @type {?} */\n\n    var defaultColor = globalDefaults.defaultColor;\n    /** @type {?} */\n\n    var lineDefault = globalDefaults.elements.line;\n    /** @type {?} */\n\n    var legendHeight = me.height;\n    /** @type {?} */\n\n    var columnHeights = me.columnHeights;\n    /** @type {?} */\n\n    var columnWidths = me.columnWidths;\n    /** @type {?} */\n\n    var legendWidth = me.width;\n    /** @type {?} */\n\n    var lineWidths = me.lineWidths;\n    /** @type {?} */\n\n    var lineHeights = me.lineHeights;\n\n    if (opts.display) {\n      /** @type {?} */\n      var ctx = me.ctx;\n      /** @type {?} */\n\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n      /** @type {?} */\n\n      var labelFont = helpers.options._parseFont(labelOpts);\n      /** @type {?} */\n\n\n      var fontSize = labelFont.size;\n      /** @type {?} */\n\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont.string;\n      /** @type {?} */\n\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      /** @type {?} */\n\n      var hitboxes = me.legendHitBoxes; // current position\n\n      /** @type {?} */\n\n      var drawLegendBox =\n      /**\n      * @param {?} x\n      * @param {?} y\n      * @param {?} legendItem\n      * @return {?}\n      */\n      function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        /** @type {?} */\n\n        var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n\n          /** @type {?} */\n          var radius = boxWidth * Math.SQRT2 / 2;\n          /** @type {?} */\n\n          var centerX = x + boxWidth / 2;\n          /** @type {?} */\n\n          var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (lineWidth !== 0) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n      /** @type {?} */\n\n\n      var drawStrikeThrough =\n      /**\n      * @param {?} x\n      * @param {?} y\n      * @param {?} w\n      * @return {?}\n      */\n      function drawStrikeThrough(x, y, w) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + w, y);\n        ctx.stroke();\n      };\n      /** @type {?} */\n\n\n      var drawCrossOver =\n      /**\n      * @param {?} x\n      * @param {?} y\n      * @param {?} w\n      * @param {?} h\n      * @return {?}\n      */\n      function drawCrossOver(x, y, w, h) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + w, y + h);\n        ctx.moveTo(x, y + h);\n        ctx.lineTo(x + w, y);\n        ctx.stroke();\n      };\n      /** @type {?} */\n\n\n      var fillText =\n      /**\n      * @param {?} x\n      * @param {?} y\n      * @param {?} legendItem\n      * @param {?} textWidth\n      * @return {?}\n      */\n      function fillText(x, y, legendItem, textWidth) {\n        /** @type {?} */\n        var halfFontSize = fontSize / 2;\n        /** @type {?} */\n\n        var xLeft = boxWidth + halfFontSize + x;\n        /** @type {?} */\n\n        var yMiddle = y + halfFontSize;\n\n        if (helpers.isArray(legendItem.text)) {\n          helpers.each(legendItem.text,\n          /**\n          * @param {?} textLine\n          * @param {?} index\n          * @return {?}\n          */\n          function (textLine, index) {\n            /** @type {?} */\n            var lineOffset = index * fontSize;\n            ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\n          });\n        } else {\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n        }\n\n        if (legendItem.hidden) {\n          if (helpers.isArray(legendItem.text)) {\n            drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\n          } else {\n            drawStrikeThrough(xLeft, yMiddle, textWidth);\n          }\n        }\n      };\n      /** @type {?} */\n\n\n      var alignmentOffset =\n      /**\n      * @param {?} dimension\n      * @param {?} blockSize\n      * @return {?}\n      */\n      function alignmentOffset(dimension, blockSize) {\n        switch (opts.align) {\n          case 'start':\n            return labelOpts.padding;\n\n          case 'end':\n            return dimension - blockSize;\n\n          default:\n            // center\n            return (dimension - blockSize + labelOpts.padding) / 2;\n        }\n      }; // Horizontal\n\n      /** @type {?} */\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\n          line: 0\n        };\n      }\n\n      helpers.each(me.legendItems,\n      /**\n      * @param {?} legendItem\n      * @param {?} i\n      * @return {?}\n      */\n      function (legendItem, i) {\n        /** @type {?} */\n        var textWidth;\n        /** @type {?} */\n\n        var height;\n        /** @type {?} */\n\n        var boxTopOffset;\n\n        if (legendItem.lineOrColumnIndex > cursor.line) {\n          if (isHorizontal) {\n            cursor.y += lineHeights[cursor.line];\n            cursor.line = legendItem.lineOrColumnIndex;\n            cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\n          } else {\n            cursor.x += columnWidths[cursor.line] + labelOpts.padding;\n            cursor.line = legendItem.lineOrColumnIndex;\n            cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\n          }\n        }\n\n        if (helpers.isArray(legendItem.text)) {\n          textWidth = legendItem.text.map(\n          /**\n          * @param {?} textLine\n          * @return {?}\n          */\n          function (textLine) {\n            return ctx.measureText(textLine).width;\n          }).reduce(\n          /**\n          * @param {?} acc\n          * @param {?} v\n          * @return {?}\n          */\n          function (acc, v) {\n            return v > acc ? v : acc;\n          }, 0);\n          boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\n          height = fontSize * legendItem.text.length;\n        } else {\n          textWidth = ctx.measureText(legendItem.text).width;\n          boxTopOffset = 0;\n          height = fontSize;\n        }\n        /** @type {?} */\n\n\n        var width = boxWidth + fontSize / 2 + textWidth;\n        /** @type {?} */\n\n        var x = cursor.x;\n        /** @type {?} */\n\n        var y = cursor.y;\n        /** @type {?} */\n\n        var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\n        drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y + topOffset, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += height + labelOpts.padding;\n        }\n      });\n    }\n  }\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/monkey-patch-chart-js-tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n\n/**\n * @return {?}\n */\n\n\nfunction monkeyPatchChartJsTooltip() {\n  if (typeof Chart === 'undefined') {\n    console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n    return;\n  }\n\n  Chart.Tooltip.prototype.drawBody = drawBody;\n  /** @type {?} */\n\n  var helpers = Chart.helpers;\n  /**\n   * @param {?} vm\n   * @param {?} align\n   * @return {?}\n   */\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * @param {?} pt\n   * @param {?} vm\n   * @param {?} ctx\n   * @return {?}\n   */\n\n\n  function drawBody(pt, vm, ctx) {\n    /** @type {?} */\n    var bodyFontSize = vm.bodyFontSize;\n    /** @type {?} */\n\n    var bodySpacing = vm.bodySpacing;\n    /** @type {?} */\n\n    var bodyAlign = vm._bodyAlign;\n    /** @type {?} */\n\n    var body = vm.body;\n    /** @type {?} */\n\n    var drawColorBoxes = vm.displayColors;\n    /** @type {?} */\n\n    var labelColors = vm.labelColors;\n    /** @type {?} */\n\n    var xLinePadding = 0;\n    /** @type {?} */\n\n    var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n    /** @type {?} */\n\n    var textColor;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n    pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n    /** @type {?} */\n\n    var fillLineOfText =\n    /**\n    * @param {?} line\n    * @return {?}\n    */\n    function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = vm.bodyFontColor;\n    helpers.each(vm.beforeBody, fillLineOfText);\n    xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body,\n    /**\n    * @param {?} bodyItem\n    * @param {?} i\n    * @return {?}\n    */\n    function (bodyItem, i) {\n      textColor = vm.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText); // Draw Legend-like boxes if needed\n\n      if (drawColorBoxes) {\n        // Fill a white rect so that colours merge nicely if the opacity is < 1\n        ctx.fillStyle = vm.legendColorBackground;\n        ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = labelColors[i].borderColor;\n        ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n        ctx.fillStyle = labelColors[i].backgroundColor;\n        ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n        ctx.fillStyle = textColor;\n      }\n\n      helpers.each(bodyItem.lines, fillLineOfText);\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng2-charts.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { BaseChartDirective, ChartsModule, ThemeService, defaultColors, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip }; //# sourceMappingURL=ng2-charts.js.map","map":{"version":3,"sources":["/Users/nitinpradhan/Documents/Project/architectui-angular-theme-free/node_modules/ng2-charts/__ivy_ngcc__/fesm2015/ng2-charts.js"],"names":["Injectable","ɵɵdefineInjectable","EventEmitter","Directive","ElementRef","Input","Output","NgModule","BehaviorSubject","cloneDeep","pluginService","Chart","Chart$1","ɵngcc0","defaultColors","getColors","chartType","index","count","formatPieColors","generateColors","formatPolarAreaColors","formatLineColor","generateColor","formatBarColor","Error","rgba","colour","alpha","concat","join","getRandomInt","min","max","Math","floor","random","colors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","hoverBackgroundColor","hoverBorderColor","map","color","getRandomColor","colorsArr","Array","i","ThemeService","pColorschemesOptions","colorschemesOptions","options","next","ɵfac","ThemeService_Factory","t","ctorParameters","ɵprov","factory","token","providedIn","ngDevMode","ɵsetClassMetadata","type","args","prototype","OldState","dataExists","dataLength","datasetsExists","datasetsLength","datasetsDataObjects","datasetsDataLengths","colorsExists","labelsExist","labels","legendExists","legend","UpdateType","Default","Update","Refresh","BaseChartDirective","element","themeService","chartClick","chartHover","old","subs","ctx","nativeElement","getContext","refresh","push","subscribe","r","themeChanged","chart","updateRequired","wantUpdate","x","data","propagateDataToDatasets","length","datasets","filter","updateColors","colorsEqual","copyColor","labelsEqual","copyLabel","position","update","a","isArray","b","borderWidth","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointRadius","pointHoverRadius","pointHitRadius","pointHoverBorderWidth","pointStyle","hoverBorderWidth","forEach","elm","Object","assign","changes","hasOwnProperty","currentValue","propagateDatasetsToData","config","display","generateLegend","destroy","unsubscribe","duration","hidden","getDatasetMeta","toBase64Image","getDatasets","hover","onHover","event","active","emit","onClick","mergedOptions","smartMerge","getColorschemesOptions","plugins","chartConfig","getChartConfiguration","overrides","level","keysToUpdate","keys","key","arrayElements","label","isMultiLineLabel","newDataValues","isMultiDataSet","dataset","joinLabel","splice","getChartBuilder","plugin","register","unregister","BaseChartDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","outputs","exportAs","features","ɵɵNgOnChangesFeature","propDecorators","selector","ChartsModule","ChartsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","ngJitMode","ɵɵsetNgModuleScope","declarations","exports","Color","Colors","monkeyPatchChartJsLegend","console","log","getAll","p","id","_element","fit","draw","helpers","defaults","valueOrDefault","getBoxWidth","labelOpts","fontSize","usePointStyle","boxWidth","me","opts","labelFont","_parseFont","size","hitboxes","legendHitBoxes","minSize","isHorizontal","width","maxWidth","height","maxHeight","getMaxLineWidth","textLines","textLine","measureText","reduce","acc","v","font","string","lineWidths","lineHeights","currentLineHeight","lineIndex","textAlign","textBaseline","each","legendItems","legendItem","text","padding","lineOrColumnIndex","left","top","vPadding","columnWidths","columnHeights","totalWidth","currentColWidth","currentColHeight","columnIndex","itemWidth","globalDefaults","global","defaultColor","lineDefault","elements","line","legendHeight","legendWidth","fontColor","defaultFontColor","cursor","lineWidth","strokeStyle","fillStyle","drawLegendBox","y","isNaN","save","lineCap","lineDashOffset","lineJoin","setLineDash","lineDash","radius","SQRT2","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","drawStrikeThrough","w","beginPath","moveTo","lineTo","stroke","drawCrossOver","h","fillText","textWidth","halfFontSize","xLeft","yMiddle","lineOffset","alignmentOffset","dimension","blockSize","align","boxTopOffset","topOffset","trunc","monkeyPatchChartJsTooltip","Tooltip","drawBody","getAlignedX","vm","xPadding","pt","bodyFontSize","bodySpacing","bodyAlign","_bodyAlign","body","drawColorBoxes","displayColors","labelColors","xLinePadding","colorX","textColor","fontString","_bodyFontStyle","_bodyFontFamily","fillLineOfText","bodyFontColor","beforeBody","bodyItem","labelTextColors","before","legendColorBackground","lines","after","afterBody"],"mappings":"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","sourcesContent":["import { Injectable, ɵɵdefineInjectable, EventEmitter, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { cloneDeep } from 'lodash-es';\nimport { pluginService, Chart as Chart$1 } from 'chart.js';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/default-colors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nconst defaultColors = [\n    [255, 99, 132],\n    [54, 162, 235],\n    [255, 206, 86],\n    [231, 233, 237],\n    [75, 192, 192],\n    [151, 187, 205],\n    [220, 220, 220],\n    [247, 70, 74],\n    [70, 191, 189],\n    [253, 180, 92],\n    [148, 159, 177],\n    [77, 83, 96]\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/get-colors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generate colors by chart type\n * @param {?} chartType\n * @param {?} index\n * @param {?} count\n * @return {?}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    if (chartType === 'bubble') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'scatter') {\n        return formatPieColors(generateColors(count));\n    }\n    throw new Error('getColors - Unsupported chart type: ' + chartType);\n}\n/**\n * @param {?} colour\n * @param {?} alpha\n * @return {?}\n */\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n/**\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 0.6))),\n        borderColor: colors.map((/**\n         * @return {?}\n         */\n        () => '#fff')),\n        pointBackgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 1))),\n        pointBorderColor: colors.map((/**\n         * @return {?}\n         */\n        () => '#fff')),\n        pointHoverBackgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 1))),\n        pointHoverBorderColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 1)))\n    };\n}\n/**\n * @param {?} colors\n * @return {?}\n */\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 0.6))),\n        borderColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 1))),\n        hoverBackgroundColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 0.8))),\n        hoverBorderColor: colors.map((/**\n         * @param {?} color\n         * @return {?}\n         */\n        (color) => rgba(color, 1)))\n    };\n}\n/**\n * @return {?}\n */\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param {?} index\n * @return {?}\n */\nfunction generateColor(index) {\n    return defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param {?} count\n * @return {?}\n */\nfunction generateColors(count) {\n    /** @type {?} */\n    const colorsArr = new Array(count);\n    for (let i = 0; i < count; i++) {\n        colorsArr[i] = defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/theme.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ThemeService {\n    constructor() {\n        this.pColorschemesOptions = {};\n        this.colorschemesOptions = new BehaviorSubject({});\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setColorschemesOptions(options) {\n        this.pColorschemesOptions = options;\n        this.colorschemesOptions.next(options);\n    }\n    /**\n     * @return {?}\n     */\n    getColorschemesOptions() {\n        return this.pColorschemesOptions;\n    }\n}\nThemeService.ɵfac = function ThemeService_Factory(t) { return new (t || ThemeService)(); };\n/** @nocollapse */\nThemeService.ctorParameters = () => [];\n/** @nocollapse */ ThemeService.ɵprov = ɵɵdefineInjectable({ factory: function ThemeService_Factory() { return new ThemeService(); }, token: ThemeService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ThemeService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ThemeService.prototype.pColorschemesOptions;\n    /** @type {?} */\n    ThemeService.prototype.colorschemesOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/base-chart.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction OldState() { }\nif (false) {\n    /** @type {?} */\n    OldState.prototype.dataExists;\n    /** @type {?} */\n    OldState.prototype.dataLength;\n    /** @type {?} */\n    OldState.prototype.datasetsExists;\n    /** @type {?} */\n    OldState.prototype.datasetsLength;\n    /** @type {?} */\n    OldState.prototype.datasetsDataObjects;\n    /** @type {?} */\n    OldState.prototype.datasetsDataLengths;\n    /** @type {?} */\n    OldState.prototype.colorsExists;\n    /** @type {?} */\n    OldState.prototype.colors;\n    /** @type {?} */\n    OldState.prototype.labelsExist;\n    /** @type {?} */\n    OldState.prototype.labels;\n    /** @type {?} */\n    OldState.prototype.legendExists;\n    /** @type {?} */\n    OldState.prototype.legend;\n}\n/** @enum {number} */\nconst UpdateType = {\n    Default: 0,\n    Update: 1,\n    Refresh: 2,\n};\nUpdateType[UpdateType.Default] = 'Default';\nUpdateType[UpdateType.Update] = 'Update';\nUpdateType[UpdateType.Refresh] = 'Refresh';\nclass BaseChartDirective {\n    /**\n     * @param {?} element\n     * @param {?} themeService\n     */\n    constructor(element, themeService) {\n        this.element = element;\n        this.themeService = themeService;\n        this.options = {};\n        this.chartClick = new EventEmitter();\n        this.chartHover = new EventEmitter();\n        this.old = {\n            dataExists: false,\n            dataLength: 0,\n            datasetsExists: false,\n            datasetsLength: 0,\n            datasetsDataObjects: [],\n            datasetsDataLengths: [],\n            colorsExists: false,\n            colors: [],\n            labelsExist: false,\n            labels: [],\n            legendExists: false,\n            legend: {},\n        };\n        this.subs = [];\n    }\n    /**\n     * Register a plugin.\n     * @param {?} plugin\n     * @return {?}\n     */\n    static registerPlugin(plugin) {\n        pluginService.register(plugin);\n    }\n    /**\n     * @param {?} plugin\n     * @return {?}\n     */\n    static unregisterPlugin(plugin) {\n        pluginService.unregister(plugin);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.refresh();\n        this.subs.push(this.themeService.colorschemesOptions.subscribe((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => this.themeChanged(r))));\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    themeChanged(options) {\n        this.refresh();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.chart) {\n            return;\n        }\n        /** @type {?} */\n        let updateRequired = UpdateType.Default;\n        /** @type {?} */\n        const wantUpdate = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => {\n            updateRequired = x > updateRequired ? x : updateRequired;\n        });\n        if (!!this.data !== this.old.dataExists) {\n            this.propagateDataToDatasets(this.data);\n            this.old.dataExists = !!this.data;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.data && this.data.length !== this.old.dataLength) {\n            this.old.dataLength = this.data && this.data.length || 0;\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.datasets !== this.old.datasetsExists) {\n            this.old.datasetsExists = !!this.datasets;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\n            this.old.datasetsLength = this.datasets && this.datasets.length || 0;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.datasets && this.datasets.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        (x, i) => x.data !== this.old.datasetsDataObjects[i])).length) {\n            this.old.datasetsDataObjects = this.datasets.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => x.data));\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.datasets && this.datasets.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        (x, i) => x.data.length !== this.old.datasetsDataLengths[i])).length) {\n            this.old.datasetsDataLengths = this.datasets.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => x.data.length));\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.colors !== this.old.colorsExists) {\n            this.old.colorsExists = !!this.colors;\n            this.updateColors();\n            wantUpdate(UpdateType.Update);\n        }\n        // This smells of inefficiency, might need to revisit this\n        if (this.colors && this.colors.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        (x, i) => !this.colorsEqual(x, this.old.colors[i]))).length) {\n            this.old.colors = this.colors.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => this.copyColor(x)));\n            this.updateColors();\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.labels !== this.old.labelsExist) {\n            this.old.labelsExist = !!this.labels;\n            wantUpdate(UpdateType.Update);\n        }\n        if (this.labels && this.labels.filter((/**\n         * @param {?} x\n         * @param {?} i\n         * @return {?}\n         */\n        (x, i) => !this.labelsEqual(x, this.old.labels[i]))).length) {\n            this.old.labels = this.labels.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => this.copyLabel(x)));\n            wantUpdate(UpdateType.Update);\n        }\n        if (!!this.options.legend !== this.old.legendExists) {\n            this.old.legendExists = !!this.options.legend;\n            wantUpdate(UpdateType.Refresh);\n        }\n        if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\n            this.old.legend.position = this.options.legend.position;\n            wantUpdate(UpdateType.Refresh);\n        }\n        switch ((/** @type {?} */ (updateRequired))) {\n            case UpdateType.Default:\n                break;\n            case UpdateType.Update:\n                this.update();\n                break;\n            case UpdateType.Refresh:\n                this.refresh();\n                break;\n        }\n    }\n    /**\n     * @param {?} a\n     * @return {?}\n     */\n    copyLabel(a) {\n        if (Array.isArray(a)) {\n            return [...a];\n        }\n        return a;\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    labelsEqual(a, b) {\n        return Array.isArray(a) === Array.isArray(b)\n            && (Array.isArray(a) || a === b)\n            && (!Array.isArray(a) || a.length === b.length)\n            && (!Array.isArray(a) || a.filter((/**\n             * @param {?} x\n             * @param {?} i\n             * @return {?}\n             */\n            (x, i) => x !== b[i])).length === 0);\n    }\n    /**\n     * @param {?} a\n     * @return {?}\n     */\n    copyColor(a) {\n        return {\n            backgroundColor: a.backgroundColor,\n            borderWidth: a.borderWidth,\n            borderColor: a.borderColor,\n            borderCapStyle: a.borderCapStyle,\n            borderDash: a.borderDash,\n            borderDashOffset: a.borderDashOffset,\n            borderJoinStyle: a.borderJoinStyle,\n            pointBorderColor: a.pointBorderColor,\n            pointBackgroundColor: a.pointBackgroundColor,\n            pointBorderWidth: a.pointBorderWidth,\n            pointRadius: a.pointRadius,\n            pointHoverRadius: a.pointHoverRadius,\n            pointHitRadius: a.pointHitRadius,\n            pointHoverBackgroundColor: a.pointHoverBackgroundColor,\n            pointHoverBorderColor: a.pointHoverBorderColor,\n            pointHoverBorderWidth: a.pointHoverBorderWidth,\n            pointStyle: a.pointStyle,\n            hoverBackgroundColor: a.hoverBackgroundColor,\n            hoverBorderColor: a.hoverBorderColor,\n            hoverBorderWidth: a.hoverBorderWidth,\n        };\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    colorsEqual(a, b) {\n        if (!a !== !b) {\n            return false;\n        }\n        return !a ||\n            (a.backgroundColor === b.backgroundColor)\n                && (a.borderWidth === b.borderWidth)\n                && (a.borderColor === b.borderColor)\n                && (a.borderCapStyle === b.borderCapStyle)\n                && (a.borderDash === b.borderDash)\n                && (a.borderDashOffset === b.borderDashOffset)\n                && (a.borderJoinStyle === b.borderJoinStyle)\n                && (a.pointBorderColor === b.pointBorderColor)\n                && (a.pointBackgroundColor === b.pointBackgroundColor)\n                && (a.pointBorderWidth === b.pointBorderWidth)\n                && (a.pointRadius === b.pointRadius)\n                && (a.pointHoverRadius === b.pointHoverRadius)\n                && (a.pointHitRadius === b.pointHitRadius)\n                && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\n                && (a.pointHoverBorderColor === b.pointHoverBorderColor)\n                && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\n                && (a.pointStyle === b.pointStyle)\n                && (a.hoverBackgroundColor === b.hoverBackgroundColor)\n                && (a.hoverBorderColor === b.hoverBorderColor)\n                && (a.hoverBorderWidth === b.hoverBorderWidth);\n    }\n    /**\n     * @return {?}\n     */\n    updateColors() {\n        this.datasets.forEach((/**\n         * @param {?} elm\n         * @param {?} index\n         * @return {?}\n         */\n        (elm, index) => {\n            if (this.colors && this.colors[index]) {\n                Object.assign(elm, this.colors[index]);\n            }\n            else {\n                Object.assign(elm, getColors(this.chartType, index, elm.data.length), Object.assign({}, elm));\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        let updateRequired = UpdateType.Default;\n        /** @type {?} */\n        const wantUpdate = (/**\n         * @param {?} x\n         * @return {?}\n         */\n        (x) => {\n            updateRequired = x > updateRequired ? x : updateRequired;\n        });\n        // Check if the changes are in the data or datasets or labels or legend\n        if (changes.hasOwnProperty('data') && changes.data.currentValue) {\n            this.propagateDataToDatasets(changes.data.currentValue);\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\n            this.propagateDatasetsToData(changes.datasets.currentValue);\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('labels')) {\n            if (this.chart) {\n                this.chart.data.labels = changes.labels.currentValue;\n            }\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('legend')) {\n            if (this.chart) {\n                this.chart.config.options.legend.display = changes.legend.currentValue;\n                this.chart.generateLegend();\n            }\n            wantUpdate(UpdateType.Update);\n        }\n        if (changes.hasOwnProperty('options')) {\n            wantUpdate(UpdateType.Refresh);\n        }\n        switch ((/** @type {?} */ (updateRequired))) {\n            case UpdateType.Update:\n                this.update();\n                break;\n            case UpdateType.Refresh:\n            case UpdateType.Default:\n                this.refresh();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n        this.subs.forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        x => x.unsubscribe()));\n    }\n    /**\n     * @param {?=} duration\n     * @return {?}\n     */\n    update(duration) {\n        if (this.chart) {\n            return this.chart.update(duration);\n        }\n    }\n    /**\n     * @param {?} index\n     * @param {?} hidden\n     * @return {?}\n     */\n    hideDataset(index, hidden) {\n        this.chart.getDatasetMeta(index).hidden = hidden;\n        this.chart.update();\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    isDatasetHidden(index) {\n        return this.chart.getDatasetMeta(index).hidden;\n    }\n    /**\n     * @return {?}\n     */\n    toBase64Image() {\n        return this.chart.toBase64Image();\n    }\n    /**\n     * @return {?}\n     */\n    getChartConfiguration() {\n        /** @type {?} */\n        const datasets = this.getDatasets();\n        /** @type {?} */\n        const options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hook for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = (/**\n             * @param {?} event\n             * @param {?} active\n             * @return {?}\n             */\n            (event, active) => {\n                if (active && !active.length) {\n                    return;\n                }\n                this.chartHover.emit({ event, active });\n            });\n        }\n        if (!options.onClick) {\n            options.onClick = (/**\n             * @param {?=} event\n             * @param {?=} active\n             * @return {?}\n             */\n            (event, active) => {\n                this.chartClick.emit({ event, active });\n            });\n        }\n        /** @type {?} */\n        const mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\n        return {\n            type: this.chartType,\n            data: {\n                labels: this.labels || [],\n                datasets\n            },\n            plugins: this.plugins,\n            options: mergedOptions,\n        };\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    getChartBuilder(ctx /*, data:any[], options:any*/) {\n        /** @type {?} */\n        const chartConfig = this.getChartConfiguration();\n        return new Chart$1(ctx, chartConfig);\n    }\n    /**\n     * @param {?} options\n     * @param {?} overrides\n     * @param {?=} level\n     * @return {?}\n     */\n    smartMerge(options, overrides, level = 0) {\n        if (level === 0) {\n            options = cloneDeep(options);\n        }\n        /** @type {?} */\n        const keysToUpdate = Object.keys(overrides);\n        keysToUpdate.forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            if (Array.isArray(overrides[key])) {\n                /** @type {?} */\n                const arrayElements = options[key];\n                if (arrayElements) {\n                    arrayElements.forEach((/**\n                     * @param {?} r\n                     * @return {?}\n                     */\n                    r => {\n                        this.smartMerge(r, overrides[key][0], level + 1);\n                    }));\n                }\n            }\n            else if (typeof (overrides[key]) === 'object') {\n                if (!(key in options)) {\n                    options[key] = {};\n                }\n                this.smartMerge(options[key], overrides[key], level + 1);\n            }\n            else {\n                options[key] = overrides[key];\n            }\n        }));\n        if (level === 0) {\n            return options;\n        }\n    }\n    /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n    isMultiLineLabel(label) {\n        return Array.isArray(label);\n    }\n    /**\n     * @private\n     * @param {?} label\n     * @return {?}\n     */\n    joinLabel(label) {\n        if (!label) {\n            return null;\n        }\n        if (this.isMultiLineLabel(label)) {\n            return label.join(' ');\n        }\n        else {\n            return label;\n        }\n    }\n    /**\n     * @private\n     * @param {?} datasets\n     * @return {?}\n     */\n    propagateDatasetsToData(datasets) {\n        this.data = this.datasets.map((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => r.data));\n        if (this.chart) {\n            this.chart.data.datasets = datasets;\n        }\n        this.updateColors();\n    }\n    /**\n     * @private\n     * @param {?} newDataValues\n     * @return {?}\n     */\n    propagateDataToDatasets(newDataValues) {\n        if (this.isMultiDataSet(newDataValues)) {\n            if (this.datasets && newDataValues.length === this.datasets.length) {\n                this.datasets.forEach((/**\n                 * @param {?} dataset\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (dataset, i) => {\n                    dataset.data = newDataValues[i];\n                }));\n            }\n            else {\n                this.datasets = newDataValues.map((/**\n                 * @param {?} data\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (data, index) => {\n                    return { data, label: this.joinLabel(this.labels[index]) || `Label ${index}` };\n                }));\n                if (this.chart) {\n                    this.chart.data.datasets = this.datasets;\n                }\n            }\n        }\n        else {\n            if (!this.datasets) {\n                this.datasets = [{ data: newDataValues }];\n                if (this.chart) {\n                    this.chart.data.datasets = this.datasets;\n                }\n            }\n            else {\n                if (!this.datasets[0]) {\n                    this.datasets[0] = {};\n                }\n                this.datasets[0].data = newDataValues;\n                this.datasets.splice(1); // Remove all elements but the first\n            }\n        }\n        this.updateColors();\n    }\n    /**\n     * @private\n     * @param {?} data\n     * @return {?}\n     */\n    isMultiDataSet(data) {\n        return Array.isArray(data[0]);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getDatasets() {\n        if (!this.datasets && !this.data) {\n            throw new Error(`ng-charts configuration error, data or datasets field are required to render chart ${this.chartType}`);\n        }\n        // If `datasets` is defined, use it over the `data` property.\n        if (this.datasets) {\n            this.propagateDatasetsToData(this.datasets);\n            return this.datasets;\n        }\n        if (this.data) {\n            this.propagateDataToDatasets(this.data);\n            return this.datasets;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    refresh() {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n        if (this.ctx) {\n            this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n        }\n    }\n}\nBaseChartDirective.ɵfac = function BaseChartDirective_Factory(t) { return new (t || BaseChartDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ThemeService)); };\nBaseChartDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseChartDirective, selectors: [[\"canvas\", \"baseChart\", \"\"]], inputs: { options: \"options\", data: \"data\", datasets: \"datasets\", labels: \"labels\", chartType: \"chartType\", colors: \"colors\", legend: \"legend\", plugins: \"plugins\" }, outputs: { chartClick: \"chartClick\", chartHover: \"chartHover\" }, exportAs: [\"base-chart\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nBaseChartDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ThemeService }\n];\nBaseChartDirective.propDecorators = {\n    data: [{ type: Input }],\n    datasets: [{ type: Input }],\n    labels: [{ type: Input }],\n    options: [{ type: Input }],\n    chartType: [{ type: Input }],\n    colors: [{ type: Input }],\n    legend: [{ type: Input }],\n    plugins: [{ type: Input }],\n    chartClick: [{ type: Output }],\n    chartHover: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseChartDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: 'canvas[baseChart]',\n                exportAs: 'base-chart'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ThemeService }]; }, { options: [{\n            type: Input\n        }], chartClick: [{\n            type: Output\n        }], chartHover: [{\n            type: Output\n        }], data: [{\n            type: Input\n        }], datasets: [{\n            type: Input\n        }], labels: [{\n            type: Input\n        }], chartType: [{\n            type: Input\n        }], colors: [{\n            type: Input\n        }], legend: [{\n            type: Input\n        }], plugins: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    BaseChartDirective.prototype.data;\n    /** @type {?} */\n    BaseChartDirective.prototype.datasets;\n    /** @type {?} */\n    BaseChartDirective.prototype.labels;\n    /** @type {?} */\n    BaseChartDirective.prototype.options;\n    /** @type {?} */\n    BaseChartDirective.prototype.chartType;\n    /** @type {?} */\n    BaseChartDirective.prototype.colors;\n    /** @type {?} */\n    BaseChartDirective.prototype.legend;\n    /** @type {?} */\n    BaseChartDirective.prototype.plugins;\n    /** @type {?} */\n    BaseChartDirective.prototype.chartClick;\n    /** @type {?} */\n    BaseChartDirective.prototype.chartHover;\n    /** @type {?} */\n    BaseChartDirective.prototype.ctx;\n    /** @type {?} */\n    BaseChartDirective.prototype.chart;\n    /**\n     * @type {?}\n     * @private\n     */\n    BaseChartDirective.prototype.old;\n    /**\n     * @type {?}\n     * @private\n     */\n    BaseChartDirective.prototype.subs;\n    /**\n     * @type {?}\n     * @private\n     */\n    BaseChartDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    BaseChartDirective.prototype.themeService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/charts.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ChartsModule {\n}\nChartsModule.ɵfac = function ChartsModule_Factory(t) { return new (t || ChartsModule)(); };\nChartsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ChartsModule });\nChartsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartsModule, { declarations: [BaseChartDirective], exports: [BaseChartDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChartsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    BaseChartDirective\n                ],\n                imports: [],\n                exports: [\n                    BaseChartDirective\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Color() { }\nif (false) {\n    /** @type {?|undefined} */\n    Color.prototype.backgroundColor;\n    /** @type {?|undefined} */\n    Color.prototype.borderWidth;\n    /** @type {?|undefined} */\n    Color.prototype.borderColor;\n    /** @type {?|undefined} */\n    Color.prototype.borderCapStyle;\n    /** @type {?|undefined} */\n    Color.prototype.borderDash;\n    /** @type {?|undefined} */\n    Color.prototype.borderDashOffset;\n    /** @type {?|undefined} */\n    Color.prototype.borderJoinStyle;\n    /** @type {?|undefined} */\n    Color.prototype.pointBorderColor;\n    /** @type {?|undefined} */\n    Color.prototype.pointBackgroundColor;\n    /** @type {?|undefined} */\n    Color.prototype.pointBorderWidth;\n    /** @type {?|undefined} */\n    Color.prototype.pointRadius;\n    /** @type {?|undefined} */\n    Color.prototype.pointHoverRadius;\n    /** @type {?|undefined} */\n    Color.prototype.pointHitRadius;\n    /** @type {?|undefined} */\n    Color.prototype.pointHoverBackgroundColor;\n    /** @type {?|undefined} */\n    Color.prototype.pointHoverBorderColor;\n    /** @type {?|undefined} */\n    Color.prototype.pointHoverBorderWidth;\n    /** @type {?|undefined} */\n    Color.prototype.pointStyle;\n    /** @type {?|undefined} */\n    Color.prototype.hoverBackgroundColor;\n    /** @type {?|undefined} */\n    Color.prototype.hoverBorderColor;\n    /** @type {?|undefined} */\n    Color.prototype.hoverBorderWidth;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/colors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Colors() { }\nif (false) {\n    /** @type {?|undefined} */\n    Colors.prototype.data;\n    /** @type {?|undefined} */\n    Colors.prototype.label;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/monkey-patch-chart-js-legend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n/**\n * @return {?}\n */\nfunction monkeyPatchChartJsLegend() {\n    if (typeof Chart === 'undefined') {\n        console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n        return;\n    }\n    /** @type {?} */\n    const plugins = Chart.plugins.getAll();\n    /** @type {?} */\n    const legend = plugins.filter((/**\n     * @param {?} p\n     * @return {?}\n     */\n    p => p.id === 'legend'))[0];\n    legend._element.prototype.fit = fit;\n    legend._element.prototype.draw = draw;\n    /** @type {?} */\n    const helpers = Chart.helpers;\n    /** @type {?} */\n    const defaults = Chart.defaults;\n    /** @type {?} */\n    const valueOrDefault = helpers.valueOrDefault;\n    /**\n     * @param {?} labelOpts\n     * @param {?} fontSize\n     * @return {?}\n     */\n    function getBoxWidth(labelOpts, fontSize) {\n        return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n            fontSize :\n            labelOpts.boxWidth;\n    }\n    /**\n     * @return {?}\n     */\n    function fit() {\n        /** @type {?} */\n        var me = this;\n        /** @type {?} */\n        var opts = me.options;\n        /** @type {?} */\n        var labelOpts = opts.labels;\n        /** @type {?} */\n        var display = opts.display;\n        /** @type {?} */\n        var ctx = me.ctx;\n        /** @type {?} */\n        var labelFont = helpers.options._parseFont(labelOpts);\n        /** @type {?} */\n        var fontSize = labelFont.size;\n        // Reset hit boxes\n        /** @type {?} */\n        var hitboxes = me.legendHitBoxes = [];\n        /** @type {?} */\n        var minSize = me.minSize;\n        /** @type {?} */\n        var isHorizontal = me.isHorizontal();\n        if (isHorizontal) {\n            minSize.width = me.maxWidth; // fill all the width\n            minSize.height = display ? 10 : 0;\n        }\n        else {\n            minSize.width = display ? 10 : 0;\n            minSize.height = me.maxHeight; // fill all the height\n        }\n        /** @type {?} */\n        var getMaxLineWidth = (/**\n         * @param {?} textLines\n         * @return {?}\n         */\n        function (textLines) {\n            return textLines.map((/**\n             * @param {?} textLine\n             * @return {?}\n             */\n            function (textLine) {\n                return ctx.measureText(textLine).width;\n            })).reduce((/**\n             * @param {?} acc\n             * @param {?} v\n             * @return {?}\n             */\n            function (acc, v) {\n                return v > acc ? v : acc;\n            }), 0);\n        });\n        // Increase sizes here\n        if (display) {\n            ctx.font = labelFont.string;\n            if (isHorizontal) {\n                // Labels\n                // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n                /** @type {?} */\n                var lineWidths = me.lineWidths = [0];\n                /** @type {?} */\n                var lineHeights = me.lineHeights = [];\n                /** @type {?} */\n                var currentLineHeight = 0;\n                /** @type {?} */\n                var lineIndex = 0;\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'top';\n                helpers.each(me.legendItems, (/**\n                 * @param {?} legendItem\n                 * @param {?} i\n                 * @return {?}\n                 */\n                function (legendItem, i) {\n                    /** @type {?} */\n                    var width;\n                    /** @type {?} */\n                    var height;\n                    if (helpers.isArray(legendItem.text)) {\n                        width = getMaxLineWidth(legendItem.text);\n                        height = fontSize * legendItem.text.length + labelOpts.padding;\n                    }\n                    else {\n                        width = ctx.measureText(legendItem.text).width;\n                        height = fontSize + labelOpts.padding;\n                    }\n                    width += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n                    if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\n                        lineHeights.push(currentLineHeight);\n                        currentLineHeight = 0;\n                        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                        lineIndex++;\n                    }\n                    legendItem.lineOrColumnIndex = lineIndex;\n                    if (height > currentLineHeight) {\n                        currentLineHeight = height;\n                    }\n                    // Store the hitbox width and height here. Final position will be updated in `draw`\n                    hitboxes[i] = {\n                        left: 0,\n                        top: 0,\n                        width: width,\n                        height: height,\n                    };\n                    lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n                }));\n                lineHeights.push(currentLineHeight);\n                minSize.height += lineHeights.reduce((/**\n                 * @param {?} acc\n                 * @param {?} v\n                 * @return {?}\n                 */\n                function (acc, v) {\n                    return acc + v;\n                }), 0);\n            }\n            else {\n                /** @type {?} */\n                var vPadding = labelOpts.padding;\n                /** @type {?} */\n                var columnWidths = me.columnWidths = [];\n                /** @type {?} */\n                var columnHeights = me.columnHeights = [];\n                /** @type {?} */\n                var totalWidth = labelOpts.padding;\n                /** @type {?} */\n                var currentColWidth = 0;\n                /** @type {?} */\n                var currentColHeight = 0;\n                /** @type {?} */\n                var columnIndex = 0;\n                helpers.each(me.legendItems, (/**\n                 * @param {?} legendItem\n                 * @param {?} i\n                 * @return {?}\n                 */\n                function (legendItem, i) {\n                    /** @type {?} */\n                    var itemWidth;\n                    /** @type {?} */\n                    var height;\n                    if (helpers.isArray(legendItem.text)) {\n                        itemWidth = getMaxLineWidth(legendItem.text);\n                        height = fontSize * legendItem.text.length;\n                    }\n                    else {\n                        itemWidth = ctx.measureText(legendItem.text).width;\n                        height = fontSize;\n                    }\n                    itemWidth += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\n                    // If too tall, go to new column\n                    if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\n                        totalWidth += currentColWidth + labelOpts.padding;\n                        columnWidths.push(currentColWidth); // previous column width\n                        columnHeights.push(currentColHeight);\n                        currentColWidth = 0;\n                        currentColHeight = 0;\n                        columnIndex++;\n                    }\n                    legendItem.lineOrColumnIndex = columnIndex;\n                    // Get max width\n                    currentColWidth = Math.max(currentColWidth, itemWidth);\n                    currentColHeight += height + vPadding;\n                    // Store the hitbox width and height here. Final position will be updated in `draw`\n                    hitboxes[i] = {\n                        left: 0,\n                        top: 0,\n                        width: itemWidth,\n                        height: height\n                    };\n                }));\n                totalWidth += currentColWidth;\n                columnWidths.push(currentColWidth);\n                columnHeights.push(currentColHeight);\n                minSize.width += totalWidth;\n            }\n        }\n        me.width = minSize.width;\n        me.height = minSize.height;\n    }\n    /**\n     * @return {?}\n     */\n    function draw() {\n        /** @type {?} */\n        var me = this;\n        /** @type {?} */\n        var opts = me.options;\n        /** @type {?} */\n        var labelOpts = opts.labels;\n        /** @type {?} */\n        var globalDefaults = defaults.global;\n        /** @type {?} */\n        var defaultColor = globalDefaults.defaultColor;\n        /** @type {?} */\n        var lineDefault = globalDefaults.elements.line;\n        /** @type {?} */\n        var legendHeight = me.height;\n        /** @type {?} */\n        var columnHeights = me.columnHeights;\n        /** @type {?} */\n        var columnWidths = me.columnWidths;\n        /** @type {?} */\n        var legendWidth = me.width;\n        /** @type {?} */\n        var lineWidths = me.lineWidths;\n        /** @type {?} */\n        var lineHeights = me.lineHeights;\n        if (opts.display) {\n            /** @type {?} */\n            var ctx = me.ctx;\n            /** @type {?} */\n            var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\n            /** @type {?} */\n            var labelFont = helpers.options._parseFont(labelOpts);\n            /** @type {?} */\n            var fontSize = labelFont.size;\n            /** @type {?} */\n            var cursor;\n            // Canvas setup\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.lineWidth = 0.5;\n            ctx.strokeStyle = fontColor; // for strikethrough effect\n            ctx.fillStyle = fontColor; // render in correct colour\n            ctx.font = labelFont.string;\n            /** @type {?} */\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            /** @type {?} */\n            var hitboxes = me.legendHitBoxes;\n            // current position\n            /** @type {?} */\n            var drawLegendBox = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} legendItem\n             * @return {?}\n             */\n            function (x, y, legendItem) {\n                if (isNaN(boxWidth) || boxWidth <= 0) {\n                    return;\n                }\n                // Set the ctx for the box\n                ctx.save();\n                /** @type {?} */\n                var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n                ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n                ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n                ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n                ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n                if (ctx.setLineDash) {\n                    // IE 9 and 10 do not support line dash\n                    ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n                }\n                if (opts.labels && opts.labels.usePointStyle) {\n                    // Recalculate x and y for drawPoint() because its expecting\n                    // x and y to be center of figure (instead of top left)\n                    /** @type {?} */\n                    var radius = boxWidth * Math.SQRT2 / 2;\n                    /** @type {?} */\n                    var centerX = x + boxWidth / 2;\n                    /** @type {?} */\n                    var centerY = y + fontSize / 2;\n                    // Draw pointStyle as legend symbol\n                    helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n                }\n                else {\n                    // Draw box as legend symbol\n                    if (lineWidth !== 0) {\n                        ctx.strokeRect(x, y, boxWidth, fontSize);\n                    }\n                    ctx.fillRect(x, y, boxWidth, fontSize);\n                }\n                ctx.restore();\n            });\n            /** @type {?} */\n            var drawStrikeThrough = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} w\n             * @return {?}\n             */\n            function (x, y, w) {\n                ctx.beginPath();\n                ctx.lineWidth = 2;\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + w, y);\n                ctx.stroke();\n            });\n            /** @type {?} */\n            var drawCrossOver = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} w\n             * @param {?} h\n             * @return {?}\n             */\n            function (x, y, w, h) {\n                ctx.beginPath();\n                ctx.lineWidth = 2;\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + w, y + h);\n                ctx.moveTo(x, y + h);\n                ctx.lineTo(x + w, y);\n                ctx.stroke();\n            });\n            /** @type {?} */\n            var fillText = (/**\n             * @param {?} x\n             * @param {?} y\n             * @param {?} legendItem\n             * @param {?} textWidth\n             * @return {?}\n             */\n            function (x, y, legendItem, textWidth) {\n                /** @type {?} */\n                var halfFontSize = fontSize / 2;\n                /** @type {?} */\n                var xLeft = boxWidth + halfFontSize + x;\n                /** @type {?} */\n                var yMiddle = y + halfFontSize;\n                if (helpers.isArray(legendItem.text)) {\n                    helpers.each(legendItem.text, (/**\n                     * @param {?} textLine\n                     * @param {?} index\n                     * @return {?}\n                     */\n                    function (textLine, index) {\n                        /** @type {?} */\n                        var lineOffset = index * fontSize;\n                        ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\n                    }));\n                }\n                else {\n                    ctx.fillText(legendItem.text, xLeft, yMiddle);\n                }\n                if (legendItem.hidden) {\n                    if (helpers.isArray(legendItem.text)) {\n                        drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\n                    }\n                    else {\n                        drawStrikeThrough(xLeft, yMiddle, textWidth);\n                    }\n                }\n            });\n            /** @type {?} */\n            var alignmentOffset = (/**\n             * @param {?} dimension\n             * @param {?} blockSize\n             * @return {?}\n             */\n            function (dimension, blockSize) {\n                switch (opts.align) {\n                    case 'start':\n                        return labelOpts.padding;\n                    case 'end':\n                        return dimension - blockSize;\n                    default: // center\n                        return (dimension - blockSize + labelOpts.padding) / 2;\n                }\n            });\n            // Horizontal\n            /** @type {?} */\n            var isHorizontal = me.isHorizontal();\n            if (isHorizontal) {\n                cursor = {\n                    x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\n                    y: me.top + labelOpts.padding,\n                    line: 0\n                };\n            }\n            else {\n                cursor = {\n                    x: me.left + labelOpts.padding,\n                    y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\n                    line: 0\n                };\n            }\n            helpers.each(me.legendItems, (/**\n             * @param {?} legendItem\n             * @param {?} i\n             * @return {?}\n             */\n            function (legendItem, i) {\n                /** @type {?} */\n                var textWidth;\n                /** @type {?} */\n                var height;\n                /** @type {?} */\n                var boxTopOffset;\n                if (legendItem.lineOrColumnIndex > cursor.line) {\n                    if (isHorizontal) {\n                        cursor.y += lineHeights[cursor.line];\n                        cursor.line = legendItem.lineOrColumnIndex;\n                        cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\n                    }\n                    else {\n                        cursor.x += columnWidths[cursor.line] + labelOpts.padding;\n                        cursor.line = legendItem.lineOrColumnIndex;\n                        cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\n                    }\n                }\n                if (helpers.isArray(legendItem.text)) {\n                    textWidth = legendItem.text.map((/**\n                     * @param {?} textLine\n                     * @return {?}\n                     */\n                    function (textLine) {\n                        return ctx.measureText(textLine).width;\n                    })).reduce((/**\n                     * @param {?} acc\n                     * @param {?} v\n                     * @return {?}\n                     */\n                    function (acc, v) {\n                        return v > acc ? v : acc;\n                    }), 0);\n                    boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\n                    height = fontSize * legendItem.text.length;\n                }\n                else {\n                    textWidth = ctx.measureText(legendItem.text).width;\n                    boxTopOffset = 0;\n                    height = fontSize;\n                }\n                /** @type {?} */\n                var width = boxWidth + (fontSize / 2) + textWidth;\n                /** @type {?} */\n                var x = cursor.x;\n                /** @type {?} */\n                var y = cursor.y;\n                /** @type {?} */\n                var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\n                drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\n                hitboxes[i].left = x;\n                hitboxes[i].top = y;\n                // Fill the actual label\n                fillText(x, y + topOffset, legendItem, textWidth);\n                if (isHorizontal) {\n                    cursor.x += width + labelOpts.padding;\n                }\n                else {\n                    cursor.y += height + labelOpts.padding;\n                }\n            }));\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/monkey-patch-chart-js-tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:variable-name\n// tslint:disable:no-var-keyword\n// tslint:disable:prefer-const\n// tslint:disable:only-arrow-functions\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:object-literal-shorthand\n// tslint:disable:space-before-function-paren\n/**\n * @return {?}\n */\nfunction monkeyPatchChartJsTooltip() {\n    if (typeof Chart === 'undefined') {\n        console.log('Chart not defined (guessing this is a universal build, and I don\\'t know why this happens -- Aviad)');\n        return;\n    }\n    Chart.Tooltip.prototype.drawBody = drawBody;\n    /** @type {?} */\n    const helpers = Chart.helpers;\n    /**\n     * @param {?} vm\n     * @param {?} align\n     * @return {?}\n     */\n    function getAlignedX(vm, align) {\n        return align === 'center'\n            ? vm.x + vm.width / 2\n            : align === 'right'\n                ? vm.x + vm.width - vm.xPadding\n                : vm.x + vm.xPadding;\n    }\n    /**\n     * @param {?} pt\n     * @param {?} vm\n     * @param {?} ctx\n     * @return {?}\n     */\n    function drawBody(pt, vm, ctx) {\n        /** @type {?} */\n        var bodyFontSize = vm.bodyFontSize;\n        /** @type {?} */\n        var bodySpacing = vm.bodySpacing;\n        /** @type {?} */\n        var bodyAlign = vm._bodyAlign;\n        /** @type {?} */\n        var body = vm.body;\n        /** @type {?} */\n        var drawColorBoxes = vm.displayColors;\n        /** @type {?} */\n        var labelColors = vm.labelColors;\n        /** @type {?} */\n        var xLinePadding = 0;\n        /** @type {?} */\n        var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n        /** @type {?} */\n        var textColor;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'top';\n        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n        pt.x = getAlignedX(vm, bodyAlign);\n        // Before Body\n        /** @type {?} */\n        var fillLineOfText = (/**\n         * @param {?} line\n         * @return {?}\n         */\n        function (line) {\n            ctx.fillText(line, pt.x + xLinePadding, pt.y);\n            pt.y += bodyFontSize + bodySpacing;\n        });\n        // Before body lines\n        ctx.fillStyle = vm.bodyFontColor;\n        helpers.each(vm.beforeBody, fillLineOfText);\n        xLinePadding = drawColorBoxes && bodyAlign !== 'right'\n            ? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n            : 0;\n        // Draw body lines now\n        helpers.each(body, (/**\n         * @param {?} bodyItem\n         * @param {?} i\n         * @return {?}\n         */\n        function (bodyItem, i) {\n            textColor = vm.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            helpers.each(bodyItem.before, fillLineOfText);\n            // Draw Legend-like boxes if needed\n            if (drawColorBoxes) {\n                // Fill a white rect so that colours merge nicely if the opacity is < 1\n                ctx.fillStyle = vm.legendColorBackground;\n                ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n                // Border\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = labelColors[i].borderColor;\n                ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n                // Inner square\n                ctx.fillStyle = labelColors[i].backgroundColor;\n                ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n                ctx.fillStyle = textColor;\n            }\n            helpers.each(bodyItem.lines, fillLineOfText);\n            helpers.each(bodyItem.after, fillLineOfText);\n        }));\n        // Reset back to 0 for after body\n        xLinePadding = 0;\n        // After body lines\n        helpers.each(vm.afterBody, fillLineOfText);\n        pt.y -= bodySpacing; // Remove last body spacing\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ng2-charts.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BaseChartDirective, ChartsModule, ThemeService, defaultColors, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip };\n\n//# sourceMappingURL=ng2-charts.js.map"]},"metadata":{},"sourceType":"module"}